/*
This computes values for Julia set
Interesting values:
cx = 0
cy = 0.7885
max_iter = 1000
a = 0 .. 2*PI
*/

function int julia(float inpzx, inpzy, max_iterations, cx, cy){
    
    int iteration = 0;
    float xtemp;
    float zx = inpzx;
    float zy = inpzy;
    
    while (zx * zx + zy * zy < 4  && iteration < max_iterations) {
        xtemp = zx * zx - zy * zy;
        zy = 2 * zx * zy  + cy;
        zx = xtemp + cx;
    
        iteration = iteration + 1;
    }
  
    if (iteration == max_iterations) {
        return(-1);
    } else {
        return(iteration);
    }
}

int i = 0;
int max_iter = ch("Max_iterations");
float znew = 0;
float a = chf("a");
float cx = chf("cx");
float cy = chf("cy");

i@val = julia(@P.x, @P.z, max_iter, cx*cos(a), cy*sin(a));
@Cd = {0,0,0};
@Cd.r = @val / 10.0;
